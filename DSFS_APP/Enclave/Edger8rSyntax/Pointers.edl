/*
 * Copyright (C) 2011-2018 Intel Corporation. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *   * Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *   * Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in
 *     the documentation and/or other materials provided with the
 *     distribution.
 *   * Neither the name of Intel Corporation nor the names of its
 *     contributors may be used to endorse or promote products derived
 *     from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */


/* Pointers.edl - Samples for pointer attributes. */

enclave {

	from "sgx_tprotected_fs.edl" import *;
	//include "sgx_tprotected_fs.h"
    /* 
     * Following keywords/attributes are supported for pointers in Edger8r: 
     *      in, out, user_check, 
     *      string, wstring,
     *      const, size, count, isptr, readonly
     */

    trusted {
    	
	//	public void ecall_IPFS_function([in, out, count=50] char* file_name, [in, out,count=cnt_datas] char* datas, size_t cnt_name, size_t cnt_datas);
    public void IPFS_write_seq(int work_load, [in, size=5] char* n_proc_s, int n_thread);
    public void IPFS_write_small(int work_load, [in, size=5] char* n_proc_s, int n_thread);
    public void IPFS_read_seq(int work_load, [in, size=5] char* n_proc_s, int n_thread);
    public void IPFS_read_small(int work_load, [in, size=5] char* n_proc_s, int n_thread);
    public void IPFS_simple(int flag,  [in, size=5] char* n_proc_s);
    public void IPFS_write_rand(int work_load, [in, size=5] char* n_proc_s, int n_thread);
    public void IPFS_read_rand(int work_load, [in, size=5] char* n_proc_s, int n_thread);
    public void IPFS_demo();

    public void open_close(int flag, [in, out, count=16] char* file_name);
    public void make_file([in, out, count=16] char* file_name);
    public void threads_write_seq(int pid);
    
    };

    /*
     * Users can define multiple trusted/untrusted blocks, 
     * edger8r will merged them into one trusted/untrusted block.
     */
    trusted {
        /*
         * Test pointer attributes in OCALLs
         */
        
    
    };

    untrusted {
    
    
    };

};
