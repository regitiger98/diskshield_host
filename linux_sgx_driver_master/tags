!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
DRV_DESCRIPTION	sgx_main.c	/^MODULE_DESCRIPTION(DRV_DESCRIPTION);$/;"	v
DRV_DESCRIPTION	sgx_main.c	73;"	d	file:
DRV_VERSION	sgx_main.c	/^MODULE_VERSION(DRV_VERSION);$/;"	v
DRV_VERSION	sgx_main.c	74;"	d	file:
EADD	sgx_asm.h	/^	EADD	= 0x1,$/;"	e	enum:sgx_commands
EAUG	sgx_asm.h	/^	EAUG	= 0xD,$/;"	e	enum:sgx_commands
EBLOCK	sgx_asm.h	/^	EBLOCK	= 0x9,$/;"	e	enum:sgx_commands
ECREATE	sgx_asm.h	/^	ECREATE	= 0x0,$/;"	e	enum:sgx_commands
EDGBRD	sgx_asm.h	/^	EDGBRD	= 0x4,$/;"	e	enum:sgx_commands
EDGBWR	sgx_asm.h	/^	EDGBWR	= 0x5,$/;"	e	enum:sgx_commands
EEXTEND	sgx_asm.h	/^	EEXTEND	= 0x6,$/;"	e	enum:sgx_commands
EINIT	sgx_asm.h	/^	EINIT	= 0x2,$/;"	e	enum:sgx_commands
ELDU	sgx_asm.h	/^	ELDU	= 0x8,$/;"	e	enum:sgx_commands
EMODPR	sgx_asm.h	/^	EMODPR	= 0xE,$/;"	e	enum:sgx_commands
EMODT	sgx_asm.h	/^	EMODT	= 0xF,$/;"	e	enum:sgx_commands
EPA	sgx_asm.h	/^	EPA	= 0xA,$/;"	e	enum:sgx_commands
EREMOVE	sgx_asm.h	/^	EREMOVE	= 0x3,$/;"	e	enum:sgx_commands
ETRACK	sgx_asm.h	/^	ETRACK	= 0xC,$/;"	e	enum:sgx_commands
EWB	sgx_asm.h	/^	EWB	= 0xB,$/;"	e	enum:sgx_commands
FEATURE_CONTROL_SGX_ENABLE	sgx_main.c	83;"	d	file:
KDIR	Makefile	/^KDIR := \/lib\/modules\/$(shell uname -r)\/build$/;"	m
PWD	Makefile	/^PWD  := $(shell pwd)$/;"	m
SGX_ALLOC_ATOMIC	sgx.h	/^	SGX_ALLOC_ATOMIC	= BIT(0),$/;"	e	enum:sgx_alloc_flags
SGX_ATTR_DEBUG	sgx_arch.h	/^	SGX_ATTR_DEBUG		= 0x02,$/;"	e	enum:sgx_attribute
SGX_ATTR_EINITTOKENKEY	sgx_arch.h	/^	SGX_ATTR_EINITTOKENKEY	= 0x20,$/;"	e	enum:sgx_attribute
SGX_ATTR_MODE64BIT	sgx_arch.h	/^	SGX_ATTR_MODE64BIT	= 0x04,$/;"	e	enum:sgx_attribute
SGX_ATTR_PROVISIONKEY	sgx_arch.h	/^	SGX_ATTR_PROVISIONKEY	= 0x10,$/;"	e	enum:sgx_attribute
SGX_ATTR_RESERVED_MASK	sgx_arch.h	77;"	d
SGX_BLKSTATE	sgx_user.h	77;"	d
SGX_CHILD_PRESENT	sgx_user.h	87;"	d
SGX_CPUID	sgx_asm.h	67;"	d
SGX_CPUID_ATTRIBUTES	sgx_asm.h	/^	SGX_CPUID_ATTRIBUTES	= 1,$/;"	e	enum:sgx_cpuid
SGX_CPUID_CAPABILITIES	sgx_asm.h	/^	SGX_CPUID_CAPABILITIES	= 0,$/;"	e	enum:sgx_cpuid
SGX_CPUID_EPC_BANKS	sgx_asm.h	/^	SGX_CPUID_EPC_BANKS	= 2,$/;"	e	enum:sgx_cpuid
SGX_EINIT_SLEEP_COUNT	sgx.h	76;"	d
SGX_EINIT_SLEEP_TIME	sgx.h	77;"	d
SGX_EINIT_SPIN_COUNT	sgx.h	75;"	d
SGX_ENCLAVE_ACT	sgx_user.h	88;"	d
SGX_ENCL_DEAD	sgx.h	/^	SGX_ENCL_DEAD		= BIT(4),$/;"	e	enum:sgx_encl_flags
SGX_ENCL_DEBUG	sgx.h	/^	SGX_ENCL_DEBUG		= BIT(1),$/;"	e	enum:sgx_encl_flags
SGX_ENCL_INITIALIZED	sgx.h	/^	SGX_ENCL_INITIALIZED	= BIT(0),$/;"	e	enum:sgx_encl_flags
SGX_ENCL_PAGE_RESERVED	sgx.h	/^	SGX_ENCL_PAGE_RESERVED	= BIT(1),$/;"	e	enum:sgx_encl_page_flags
SGX_ENCL_PAGE_TCS	sgx.h	/^	SGX_ENCL_PAGE_TCS	= BIT(0),$/;"	e	enum:sgx_encl_page_flags
SGX_ENCL_SECS_EVICTED	sgx.h	/^	SGX_ENCL_SECS_EVICTED	= BIT(2),$/;"	e	enum:sgx_encl_flags
SGX_ENCL_SUSPEND	sgx.h	/^	SGX_ENCL_SUSPEND	= BIT(3),$/;"	e	enum:sgx_encl_flags
SGX_ENTRYEPOCH_LOCKED	sgx_user.h	89;"	d
SGX_FAULT_RESERVE	sgx.h	/^	SGX_FAULT_RESERVE	= BIT(0),$/;"	e	enum:sgx_fault_flags
SGX_INVALID_ATTRIBUTE	sgx_user.h	76;"	d
SGX_INVALID_CPUSVN	sgx_user.h	93;"	d
SGX_INVALID_EINITTOKEN	sgx_user.h	90;"	d
SGX_INVALID_ISVSVN	sgx_user.h	94;"	d
SGX_INVALID_KEYNAME	sgx_user.h	96;"	d
SGX_INVALID_MEASUREMENT	sgx_user.h	78;"	d
SGX_INVALID_SIGNATURE	sgx_user.h	82;"	d
SGX_INVALID_SIG_STRUCT	sgx_user.h	75;"	d
SGX_IOC_ENCLAVE_ADD_PAGE	sgx_user.h	68;"	d
SGX_IOC_ENCLAVE_CREATE	sgx_user.h	66;"	d
SGX_IOC_ENCLAVE_INIT	sgx_user.h	70;"	d
SGX_LE_ROLLBACK	sgx_user.h	100;"	d
SGX_LOCKFAIL	sgx_user.h	81;"	d
SGX_MAC_COMPARE_FAIL	sgx_user.h	83;"	d
SGX_MAGIC	sgx_user.h	64;"	d
SGX_MAX_EPC_BANKS	sgx_main.c	90;"	d	file:
SGX_MISC_EXINFO	sgx_arch.h	/^	SGX_MISC_EXINFO		= 0x01,$/;"	e	enum:sgx_misc
SGX_MISC_RESERVED_MASK	sgx_arch.h	68;"	d
SGX_MODULUS_SIZE	sgx_arch.h	165;"	d
SGX_NOTBLOCKABLE	sgx_user.h	79;"	d
SGX_NOT_TRACKED	sgx_user.h	85;"	d
SGX_NR_LOW_EPC_PAGES_DEFAULT	sgx_page_cache.c	73;"	d	file:
SGX_NR_SWAP_CLUSTER_MAX	sgx_page_cache.c	74;"	d	file:
SGX_PAGE_NOT_BLOCKED	sgx_user.h	84;"	d
SGX_PAGE_TYPE_REG	sgx_arch.h	/^	SGX_PAGE_TYPE_REG	= 0x02,$/;"	e	enum:sgx_page_type
SGX_PAGE_TYPE_SECS	sgx_arch.h	/^	SGX_PAGE_TYPE_SECS	= 0x00,$/;"	e	enum:sgx_page_type
SGX_PAGE_TYPE_TCS	sgx_arch.h	/^	SGX_PAGE_TYPE_TCS	= 0x01,$/;"	e	enum:sgx_page_type
SGX_PAGE_TYPE_VA	sgx_arch.h	/^	SGX_PAGE_TYPE_VA	= 0x03,$/;"	e	enum:sgx_page_type
SGX_PG_INVLD	sgx_user.h	80;"	d
SGX_PG_IS_SECS	sgx_user.h	92;"	d
SGX_POWER_LOST_ENCLAVE	sgx_user.h	99;"	d
SGX_PREV_TRK_INCMPL	sgx_user.h	91;"	d
SGX_SECINFO_PAGE_TYPE_MASK	sgx_arch.h	134;"	d
SGX_SECINFO_PERMISSION_MASK	sgx_arch.h	133;"	d
SGX_SECINFO_R	sgx_arch.h	/^	SGX_SECINFO_R		= 0x01,$/;"	e	enum:sgx_secinfo_flags
SGX_SECINFO_REG	sgx_arch.h	/^	SGX_SECINFO_REG		= (SGX_PAGE_TYPE_REG << 8),$/;"	e	enum:sgx_secinfo_flags
SGX_SECINFO_RESERVED_MASK	sgx_arch.h	135;"	d
SGX_SECINFO_SECS	sgx_arch.h	/^	SGX_SECINFO_SECS	= (SGX_PAGE_TYPE_SECS << 8),$/;"	e	enum:sgx_secinfo_flags
SGX_SECINFO_TCS	sgx_arch.h	/^	SGX_SECINFO_TCS		= (SGX_PAGE_TYPE_TCS << 8),$/;"	e	enum:sgx_secinfo_flags
SGX_SECINFO_W	sgx_arch.h	/^	SGX_SECINFO_W		= 0x02,$/;"	e	enum:sgx_secinfo_flags
SGX_SECINFO_X	sgx_arch.h	/^	SGX_SECINFO_X		= 0x04,$/;"	e	enum:sgx_secinfo_flags
SGX_SECS_RESERVED1_SIZE	sgx_arch.h	79;"	d
SGX_SECS_RESERVED2_SIZE	sgx_arch.h	80;"	d
SGX_SECS_RESERVED3_SIZE	sgx_arch.h	81;"	d
SGX_SECS_RESERVED4_SIZE	sgx_arch.h	82;"	d
SGX_SSA_GPRS_SIZE	sgx_arch.h	61;"	d
SGX_SSA_MISC_EXINFO_SIZE	sgx_arch.h	62;"	d
SGX_SUCCESS	sgx_user.h	74;"	d
SGX_TCS_DBGOPTIN	sgx_arch.h	/^	SGX_TCS_DBGOPTIN	= 0x01, \/* cleared on EADD *\/$/;"	e	enum:sgx_tcs_flags
SGX_TCS_RESERVED_MASK	sgx_arch.h	105;"	d
SGX_UNMASKED_EVENT	sgx_user.h	95;"	d
SGX_VA_SLOT_COUNT	sgx.h	79;"	d
SGX_VA_SLOT_OCCUPIED	sgx_user.h	86;"	d
X86_FEATURE_SGX	sgx_main.c	80;"	d	file:
XAX	sgx_asm.h	94;"	d
XAX	sgx_asm.h	96;"	d
_ASM_X86_SGX_ARCH_H	sgx_arch.h	59;"	d
_ASM_X86_SGX_H	sgx_asm.h	59;"	d
_UAPI_ASM_X86_SGX_H	sgx_user.h	59;"	d
__ARCH_INTEL_SGX_H__	sgx.h	61;"	d
__eadd	sgx_asm.h	/^static inline int __eadd(struct sgx_pageinfo *pginfo, void *epc)$/;"	f
__eaug	sgx_asm.h	/^static inline int __eaug(struct sgx_pageinfo *pginfo, void *epc)$/;"	f
__eblock	sgx_asm.h	/^static inline int __eblock(unsigned long rcx)$/;"	f
__ecreate	sgx_asm.h	/^static inline unsigned long __ecreate(struct sgx_pageinfo *pginfo, void *secs)$/;"	f
__edbgrd	sgx_asm.h	/^static inline int __edbgrd(void *epc, unsigned long *data)$/;"	f
__edbgwr	sgx_asm.h	/^static inline int __edbgwr(void *epc, unsigned long *data)$/;"	f
__eextend	sgx_asm.h	/^static inline int __eextend(void *secs, void *epc)$/;"	f
__einit	sgx_asm.h	/^static inline int __einit(void *sigstruct, struct sgx_einittoken *einittoken,$/;"	f
__eldu	sgx_asm.h	/^static inline int __eldu(unsigned long rbx, unsigned long rcx,$/;"	f
__emodpr	sgx_asm.h	/^static inline int __emodpr(struct sgx_secinfo *secinfo, void *epc)$/;"	f
__emodt	sgx_asm.h	/^static inline int __emodt(struct sgx_secinfo *secinfo, void *epc)$/;"	f
__encls	sgx_asm.h	116;"	d
__encls_ret	sgx_asm.h	99;"	d
__epa	sgx_asm.h	/^static inline int __epa(void *epc)$/;"	f
__eremove	sgx_asm.h	/^static inline int __eremove(void *epc)$/;"	f
__etrack	sgx_asm.h	/^static inline int __etrack(void *epc)$/;"	f
__ewb	sgx_asm.h	/^static inline int __ewb(struct sgx_pageinfo *pginfo, void *epc, void *va)$/;"	f
__sgx_encl_add_page	sgx_encl.c	/^static int __sgx_encl_add_page(struct sgx_encl *encl,$/;"	f	file:
__sgx_ewb	sgx_page_cache.c	/^static int __sgx_ewb(struct sgx_encl *encl,$/;"	f	file:
__this_module	isgx.mod.c	/^__visible struct module __this_module$/;"	v	typeref:struct:module
__used	isgx.mod.c	/^__used$/;"	v	file:
access_cnt	sgx_util.c	/^int access_cnt=0; \/\/JINU$/;"	v
add_page_reqs	sgx.h	/^	struct list_head add_page_reqs;$/;"	m	struct:sgx_encl	typeref:struct:sgx_encl::list_head
add_page_work	sgx.h	/^	struct work_struct add_page_work;$/;"	m	struct:sgx_encl	typeref:struct:sgx_encl::work_struct
addr	sgx.h	/^	unsigned long addr;$/;"	m	struct:sgx_encl_page
addr	sgx_user.h	/^	__u64	addr;$/;"	m	struct:sgx_enclave_add_page
addr	sgx_user.h	/^	__u64	addr;$/;"	m	struct:sgx_enclave_init
aep	sgx_arch.h	/^	uint64_t aep;$/;"	m	struct:sgx_tcs
attributemask	sgx_arch.h	/^	uint64_t attributemask;$/;"	m	struct:sgx_keyrequest
attributemask	sgx_arch.h	/^	uint8_t attributemask[16];$/;"	m	struct:sgx_sigstruct_body
attributes	sgx.h	/^	uint64_t attributes;$/;"	m	struct:sgx_encl
attributes	sgx_arch.h	/^	uint64_t attributes;$/;"	m	struct:sgx_einittoken_payload
attributes	sgx_arch.h	/^	uint64_t attributes;$/;"	m	struct:sgx_report
attributes	sgx_arch.h	/^	uint64_t attributes;$/;"	m	struct:sgx_secs
attributes	sgx_arch.h	/^	uint64_t attributes;$/;"	m	struct:sgx_sigstruct_body
attributes	sgx_arch.h	/^	uint64_t attributes;$/;"	m	struct:sgx_targetinfo
backing	sgx.h	/^	struct file *backing;$/;"	m	struct:sgx_encl	typeref:struct:sgx_encl::file
base	sgx.h	/^	unsigned long base;$/;"	m	struct:sgx_encl
base	sgx_arch.h	/^	uint64_t base;$/;"	m	struct:sgx_secs
body	sgx_arch.h	/^	struct sgx_sigstruct_body body;$/;"	m	struct:sgx_sigstruct	typeref:struct:sgx_sigstruct::sgx_sigstruct_body
body	sgx_arch.h	/^	struct sgx_sigstruct_body body;$/;"	m	struct:sgx_sigstruct_payload	typeref:struct:sgx_sigstruct_payload::sgx_sigstruct_body
cleanup_sgx_module	sgx_main.c	/^module_exit(cleanup_sgx_module);$/;"	v
cleanup_sgx_module	sgx_main.c	/^void cleanup_sgx_module(void)$/;"	f
cpusvn	sgx_arch.h	/^	uint8_t cpusvn[16];$/;"	m	struct:sgx_keyrequest
cpusvn	sgx_arch.h	/^	uint8_t cpusvn[16];$/;"	m	struct:sgx_report
cpusvnle	sgx_arch.h	/^	uint8_t cpusvnle[16];$/;"	m	struct:sgx_einittoken
cssa	sgx_arch.h	/^	uint32_t cssa;$/;"	m	struct:sgx_tcs
date	sgx_arch.h	/^	uint32_t date;$/;"	m	struct:sgx_sigstruct_header
einittoken	sgx_user.h	/^	__u64	einittoken;$/;"	m	struct:sgx_enclave_init
encl	sgx_encl.c	/^	struct sgx_encl *encl;$/;"	m	struct:sgx_add_page_req	typeref:struct:sgx_add_page_req::sgx_encl	file:
encl_list	sgx.h	/^	struct list_head encl_list;$/;"	m	struct:sgx_encl	typeref:struct:sgx_encl::list_head
encl_list	sgx.h	/^	struct list_head encl_list;$/;"	m	struct:sgx_tgid_ctx	typeref:struct:sgx_tgid_ctx::list_head
encl_page	sgx.h	/^	struct sgx_encl_page *encl_page;$/;"	m	struct:sgx_epc_page	typeref:struct:sgx_epc_page::sgx_encl_page
encl_page	sgx_encl.c	/^	struct sgx_encl_page *encl_page;$/;"	m	struct:sgx_add_page_req	typeref:struct:sgx_add_page_req::sgx_encl_page	file:
enclave_id	sgx_arch.h	/^	uint64_t enclave_id;$/;"	m	struct:sgx_pcmd
epc_page	sgx.h	/^	struct sgx_epc_page *epc_page;$/;"	m	struct:sgx_encl_page	typeref:struct:sgx_encl_page::sgx_epc_page
epc_page	sgx.h	/^	struct sgx_epc_page *epc_page;$/;"	m	struct:sgx_va_page	typeref:struct:sgx_va_page::sgx_epc_page
exponent	sgx_arch.h	/^	uint32_t exponent;$/;"	m	struct:sgx_sigstruct
flags	sgx.h	/^	unsigned int flags;$/;"	m	struct:sgx_encl
flags	sgx.h	/^	unsigned int flags;$/;"	m	struct:sgx_encl_page
flags	sgx_arch.h	/^	uint64_t flags;$/;"	m	struct:sgx_secinfo
flags	sgx_arch.h	/^	uint64_t flags;$/;"	m	struct:sgx_tcs
fslimit	sgx_arch.h	/^	uint32_t fslimit;$/;"	m	struct:sgx_tcs
gslimit	sgx_arch.h	/^	uint32_t gslimit;$/;"	m	struct:sgx_tcs
header	sgx_arch.h	/^	struct sgx_sigstruct_header header;$/;"	m	struct:sgx_sigstruct	typeref:struct:sgx_sigstruct::sgx_sigstruct_header
header	sgx_arch.h	/^	struct sgx_sigstruct_header header;$/;"	m	struct:sgx_sigstruct_payload	typeref:struct:sgx_sigstruct_payload::sgx_sigstruct_header
header1	sgx_arch.h	/^	uint64_t header1[2];$/;"	m	struct:sgx_sigstruct_header
header2	sgx_arch.h	/^	uint64_t header2[2];$/;"	m	struct:sgx_sigstruct_header
init_sgx_module	sgx_main.c	/^int init_sgx_module(void)$/;"	f
init_sgx_module	sgx_main.c	/^module_init(init_sgx_module);$/;"	v
isgx-y	Makefile	/^	isgx-y := \\$/;"	m
isvprodid	sgx_arch.h	/^	uint16_t isvprodid;$/;"	m	struct:sgx_report
isvprodid	sgx_arch.h	/^	uint16_t isvprodid;$/;"	m	struct:sgx_sigstruct_body
isvprodidle	sgx_arch.h	/^	uint16_t isvprodidle;$/;"	m	struct:sgx_einittoken
isvsvn	sgx_arch.h	/^	uint16_t isvsvn;$/;"	m	struct:sgx_keyrequest
isvsvn	sgx_arch.h	/^	uint16_t isvsvn;$/;"	m	struct:sgx_report
isvsvn	sgx_arch.h	/^	uint16_t isvsvn;$/;"	m	struct:sgx_secs
isvsvn	sgx_arch.h	/^	uint16_t isvsvn;$/;"	m	struct:sgx_sigstruct_body
isvsvnle	sgx_arch.h	/^	uint16_t isvsvnle;$/;"	m	struct:sgx_einittoken
isvvprodid	sgx_arch.h	/^	uint16_t isvvprodid;$/;"	m	struct:sgx_secs
keyid	sgx_arch.h	/^	uint8_t keyid[32];$/;"	m	struct:sgx_einittoken
keyid	sgx_arch.h	/^	uint8_t keyid[32];$/;"	m	struct:sgx_keyrequest
keyid	sgx_arch.h	/^	uint8_t keyid[32];$/;"	m	struct:sgx_report
keyname	sgx_arch.h	/^	uint16_t keyname;$/;"	m	struct:sgx_keyrequest
keypolicy	sgx_arch.h	/^	uint16_t keypolicy;$/;"	m	struct:sgx_keyrequest
ksgxswapd	sgx_page_cache.c	/^static int ksgxswapd(void *p)$/;"	f	file:
ksgxswapd_tsk	sgx_page_cache.c	/^static struct task_struct *ksgxswapd_tsk;$/;"	v	typeref:struct:task_struct	file:
linaddr	sgx_arch.h	/^	uint64_t linaddr;$/;"	m	struct:sgx_pageinfo
list	sgx.h	/^	struct list_head list;$/;"	m	struct:sgx_epc_page	typeref:struct:sgx_epc_page::list_head
list	sgx.h	/^	struct list_head list;$/;"	m	struct:sgx_tgid_ctx	typeref:struct:sgx_tgid_ctx::list_head
list	sgx.h	/^	struct list_head list;$/;"	m	struct:sgx_va_page	typeref:struct:sgx_va_page::list_head
list	sgx_encl.c	/^	struct list_head list;$/;"	m	struct:sgx_add_page_req	typeref:struct:sgx_add_page_req::list_head	file:
load_list	sgx.h	/^	struct list_head load_list;$/;"	m	struct:sgx_encl	typeref:struct:sgx_encl::list_head
lock	sgx.h	/^	struct mutex lock;$/;"	m	struct:sgx_encl	typeref:struct:sgx_encl::mutex
mac	sgx_arch.h	/^	uint8_t mac[16];$/;"	m	struct:sgx_einittoken
mac	sgx_arch.h	/^	uint8_t mac[16];$/;"	m	struct:sgx_pcmd
mac	sgx_arch.h	/^	uint8_t mac[16];$/;"	m	struct:sgx_report
maskedattributesle	sgx_arch.h	/^	uint64_t maskedattributesle;$/;"	m	struct:sgx_einittoken
maskedmiscselectle	sgx_arch.h	/^	uint32_t maskedmiscselectle;$/;"	m	struct:sgx_einittoken
maskedxfrmle	sgx_arch.h	/^	uint64_t maskedxfrmle;$/;"	m	struct:sgx_einittoken
miscmask	sgx_arch.h	/^	uint32_t miscmask;$/;"	m	struct:sgx_keyrequest
miscmask	sgx_arch.h	/^	uint32_t miscmask;$/;"	m	struct:sgx_sigstruct_body
miscselect	sgx_arch.h	/^	uint32_t miscselect;$/;"	m	struct:sgx_report
miscselect	sgx_arch.h	/^	uint32_t miscselect;$/;"	m	struct:sgx_secs
miscselect	sgx_arch.h	/^	uint32_t miscselect;$/;"	m	struct:sgx_sigstruct_body
miscselect	sgx_arch.h	/^	uint32_t miscselect;$/;"	m	struct:sgx_targetinfo
mm	sgx.h	/^	struct mm_struct *mm;$/;"	m	struct:sgx_encl	typeref:struct:sgx_encl::mm_struct
mmu_notifier	sgx.h	/^	struct mmu_notifier mmu_notifier;$/;"	m	struct:sgx_encl	typeref:struct:sgx_encl::mmu_notifier
modulus	sgx_arch.h	/^	uint8_t modulus[SGX_MODULUS_SIZE];$/;"	m	struct:sgx_sigstruct
mrenclave	sgx_arch.h	/^	uint32_t mrenclave[8];$/;"	m	struct:sgx_secs
mrenclave	sgx_arch.h	/^	uint8_t mrenclave[32];$/;"	m	struct:sgx_einittoken_payload
mrenclave	sgx_arch.h	/^	uint8_t mrenclave[32];$/;"	m	struct:sgx_report
mrenclave	sgx_arch.h	/^	uint8_t mrenclave[32];$/;"	m	struct:sgx_sigstruct_body
mrenclave	sgx_arch.h	/^	uint8_t mrenclave[32];$/;"	m	struct:sgx_targetinfo
mrmask	sgx_encl.c	/^	u16 mrmask;$/;"	m	struct:sgx_add_page_req	file:
mrmask	sgx_user.h	/^	__u16	mrmask;$/;"	m	struct:sgx_enclave_add_page
mrsigner	sgx_arch.h	/^	uint32_t mrsigner[8];$/;"	m	struct:sgx_secs
mrsigner	sgx_arch.h	/^	uint8_t mrsigner[32];$/;"	m	struct:sgx_einittoken_payload
mrsigner	sgx_arch.h	/^	uint8_t mrsigner[32];$/;"	m	struct:sgx_report
nssa	sgx_arch.h	/^	uint32_t nssa;$/;"	m	struct:sgx_tcs
oentry	sgx_arch.h	/^	uint64_t oentry;$/;"	m	struct:sgx_tcs
ofsbase	sgx_arch.h	/^	uint64_t ofsbase;$/;"	m	struct:sgx_tcs
ogsbase	sgx_arch.h	/^	uint64_t ogsbase;$/;"	m	struct:sgx_tcs
ossa	sgx_arch.h	/^	uint64_t ossa;$/;"	m	struct:sgx_tcs
pa	sgx.h	/^	resource_size_t	pa;$/;"	m	struct:sgx_epc_page
pa	sgx.h	/^	unsigned long pa;$/;"	m	struct:sgx_epc_bank
page_tree	sgx.h	/^	struct radix_tree_root page_tree;$/;"	m	struct:sgx_encl	typeref:struct:sgx_encl::radix_tree_root
payload	sgx_arch.h	/^	struct sgx_einittoken_payload payload;$/;"	m	struct:sgx_einittoken	typeref:struct:sgx_einittoken::sgx_einittoken_payload
pcmd	sgx.h	/^	struct file *pcmd;$/;"	m	struct:sgx_encl	typeref:struct:sgx_encl::file
pcmd	sgx_arch.h	/^		uint64_t pcmd;$/;"	m	union:sgx_pageinfo::__anon1
pdev	sgx_main.c	/^static struct platform_device *pdev;$/;"	v	typeref:struct:platform_device	file:
q1	sgx_arch.h	/^	uint8_t q1[SGX_MODULUS_SIZE];$/;"	m	struct:sgx_sigstruct
q2	sgx_arch.h	/^	uint8_t q2[SGX_MODULUS_SIZE];$/;"	m	struct:sgx_sigstruct
refcount	sgx.h	/^	struct kref refcount;$/;"	m	struct:sgx_encl	typeref:struct:sgx_encl::kref
refcount	sgx.h	/^	struct kref refcount;$/;"	m	struct:sgx_tgid_ctx	typeref:struct:sgx_tgid_ctx::kref
reportdata	sgx_arch.h	/^	uint8_t reportdata[64];$/;"	m	struct:sgx_report
reserved	sgx_arch.h	/^	uint64_t reserved[503];$/;"	m	struct:sgx_tcs
reserved	sgx_arch.h	/^	uint64_t reserved[7];$/;"	m	struct:sgx_secinfo
reserved	sgx_arch.h	/^	uint8_t reserved[40];$/;"	m	struct:sgx_pcmd
reserved1	sgx_arch.h	/^	uint16_t reserved1;$/;"	m	struct:sgx_keyrequest
reserved1	sgx_arch.h	/^	uint32_t reserved1[11];$/;"	m	struct:sgx_einittoken_payload
reserved1	sgx_arch.h	/^	uint8_t reserved1[28];$/;"	m	struct:sgx_report
reserved1	sgx_arch.h	/^	uint8_t reserved1[4];$/;"	m	struct:sgx_targetinfo
reserved1	sgx_arch.h	/^	uint8_t reserved1[84];$/;"	m	struct:sgx_sigstruct_header
reserved1	sgx_arch.h	/^	uint8_t reserved1[SGX_SECS_RESERVED1_SIZE];$/;"	m	struct:sgx_secs
reserved2	sgx_arch.h	/^	uint8_t reserved2[20];$/;"	m	struct:sgx_sigstruct_body
reserved2	sgx_arch.h	/^	uint8_t reserved2[24];$/;"	m	struct:sgx_einittoken
reserved2	sgx_arch.h	/^	uint8_t reserved2[32];$/;"	m	struct:sgx_einittoken_payload
reserved2	sgx_arch.h	/^	uint8_t reserved2[32];$/;"	m	struct:sgx_report
reserved2	sgx_arch.h	/^	uint8_t reserved2[436];$/;"	m	struct:sgx_keyrequest
reserved2	sgx_arch.h	/^	uint8_t reserved2[456];$/;"	m	struct:sgx_targetinfo
reserved2	sgx_arch.h	/^	uint8_t reserved2[SGX_SECS_RESERVED2_SIZE];$/;"	m	struct:sgx_secs
reserved3	sgx_arch.h	/^	uint8_t	reserved3[SGX_SECS_RESERVED3_SIZE];$/;"	m	struct:sgx_secs
reserved3	sgx_arch.h	/^	uint8_t reserved3[32];$/;"	m	struct:sgx_einittoken_payload
reserved3	sgx_arch.h	/^	uint8_t reserved3[32];$/;"	m	struct:sgx_sigstruct_body
reserved3	sgx_arch.h	/^	uint8_t reserved3[96];$/;"	m	struct:sgx_report
reserved4	sgx_arch.h	/^	uint8_t reserved4[12];$/;"	m	struct:sgx_sigstruct
reserved4	sgx_arch.h	/^	uint8_t reserved4[60];$/;"	m	struct:sgx_report
reserved4	sgx_arch.h	/^	uint8_t reserved4[SGX_SECS_RESERVED4_SIZE];$/;"	m	struct:sgx_secs
secinfo	sgx_arch.h	/^		uint64_t secinfo;$/;"	m	union:sgx_pageinfo::__anon1
secinfo	sgx_arch.h	/^	struct sgx_secinfo secinfo;$/;"	m	struct:sgx_pcmd	typeref:struct:sgx_pcmd::sgx_secinfo
secinfo	sgx_encl.c	/^	struct sgx_secinfo secinfo;$/;"	m	struct:sgx_add_page_req	typeref:struct:sgx_add_page_req::sgx_secinfo	file:
secinfo	sgx_user.h	/^	__u64	secinfo;$/;"	m	struct:sgx_enclave_add_page
secs	sgx.h	/^	struct sgx_encl_page secs;$/;"	m	struct:sgx_encl	typeref:struct:sgx_encl::sgx_encl_page
secs	sgx_arch.h	/^	uint64_t secs;$/;"	m	struct:sgx_pageinfo
secs_child_cnt	sgx.h	/^	unsigned int secs_child_cnt;$/;"	m	struct:sgx_encl
sgx_add_epc_bank	sgx_page_cache.c	/^int sgx_add_epc_bank(resource_size_t start, unsigned long size, int bank)$/;"	f
sgx_add_page_req	sgx_encl.c	/^struct sgx_add_page_req {$/;"	s	file:
sgx_add_page_worker	sgx_encl.c	/^static void sgx_add_page_worker(struct work_struct *work)$/;"	f	file:
sgx_add_page_wq	sgx_main.c	/^struct workqueue_struct *sgx_add_page_wq;$/;"	v	typeref:struct:workqueue_struct
sgx_add_to_tgid_ctx	sgx_encl.c	/^static int sgx_add_to_tgid_ctx(struct sgx_encl *encl)$/;"	f	file:
sgx_alloc_flags	sgx.h	/^enum sgx_alloc_flags {$/;"	g
sgx_alloc_page	sgx_page_cache.c	/^struct sgx_epc_page *sgx_alloc_page(unsigned int flags)$/;"	f
sgx_alloc_page_fast	sgx_page_cache.c	/^static struct sgx_epc_page *sgx_alloc_page_fast(void)$/;"	f	file:
sgx_alloc_va_slot	sgx.h	/^static inline unsigned int sgx_alloc_va_slot(struct sgx_va_page *page)$/;"	f
sgx_attribute	sgx_arch.h	/^enum sgx_attribute {$/;"	g
sgx_calc_ssaframesize	sgx_encl.c	/^static u32 sgx_calc_ssaframesize(u32 miscselect, u64 xfrm)$/;"	f	file:
sgx_commands	sgx_asm.h	/^enum sgx_commands {$/;"	g
sgx_compat_ioctl	sgx_main.c	/^long sgx_compat_ioctl(struct file *filep, unsigned int cmd, unsigned long arg)$/;"	f
sgx_cpuid	sgx_asm.h	/^enum sgx_cpuid {$/;"	g
sgx_crit	sgx.h	197;"	d
sgx_dbg	sgx.h	189;"	d
sgx_dev	sgx_main.c	/^static struct miscdevice sgx_dev = {$/;"	v	typeref:struct:miscdevice	file:
sgx_dev_init	sgx_main.c	/^static int sgx_dev_init(struct device *parent)$/;"	f	file:
sgx_device_ids	sgx_main.c	/^static struct acpi_device_id sgx_device_ids[] = {$/;"	v	typeref:struct:acpi_device_id	file:
sgx_do_fault	sgx_util.c	/^static struct sgx_encl_page *sgx_do_fault(struct vm_area_struct *vma,$/;"	f	file:
sgx_drv	sgx_main.c	/^static struct platform_driver sgx_drv = {$/;"	v	typeref:struct:platform_driver	file:
sgx_drv_probe	sgx_main.c	/^static int sgx_drv_probe(struct platform_device *pdev)$/;"	f	file:
sgx_drv_remove	sgx_main.c	/^static int sgx_drv_remove(struct platform_device *pdev)$/;"	f	file:
sgx_eadd	sgx_encl.c	/^static int sgx_eadd(struct sgx_epc_page *secs_page,$/;"	f	file:
sgx_eblock	sgx_util.c	/^void sgx_eblock(struct sgx_encl *encl, struct sgx_epc_page *epc_page)$/;"	f
sgx_einit	sgx_encl.c	/^static int sgx_einit(struct sgx_encl *encl, struct sgx_sigstruct *sigstruct,$/;"	f	file:
sgx_einittoken	sgx_arch.h	/^struct sgx_einittoken {$/;"	s
sgx_einittoken_payload	sgx_arch.h	/^struct sgx_einittoken_payload {$/;"	s
sgx_eldu	sgx_util.c	/^static int sgx_eldu(struct sgx_encl *encl,$/;"	f	file:
sgx_encl	sgx.h	/^struct sgx_encl {$/;"	s
sgx_encl_add_page	sgx_encl.c	/^int sgx_encl_add_page(struct sgx_encl *encl, unsigned long addr, void *data,$/;"	f
sgx_encl_alloc	sgx_encl.c	/^static struct sgx_encl *sgx_encl_alloc(struct sgx_secs *secs)$/;"	f	file:
sgx_encl_create	sgx_encl.c	/^int sgx_encl_create(struct sgx_secs *secs)$/;"	f
sgx_encl_find	sgx_encl.c	/^int sgx_encl_find(struct mm_struct *mm, unsigned long addr,$/;"	f
sgx_encl_flags	sgx.h	/^enum sgx_encl_flags {$/;"	g
sgx_encl_init	sgx_encl.c	/^int sgx_encl_init(struct sgx_encl *encl, struct sgx_sigstruct *sigstruct,$/;"	f
sgx_encl_page	sgx.h	/^struct sgx_encl_page {$/;"	s
sgx_encl_page_flags	sgx.h	/^enum sgx_encl_page_flags {$/;"	g
sgx_encl_release	sgx_encl.c	/^void sgx_encl_release(struct kref *ref)$/;"	f
sgx_encl_size_max_32	sgx_main.c	/^u64 sgx_encl_size_max_32;$/;"	v
sgx_encl_size_max_64	sgx_main.c	/^u64 sgx_encl_size_max_64;$/;"	v
sgx_enclave_add_page	sgx_user.h	/^struct sgx_enclave_add_page {$/;"	s
sgx_enclave_create	sgx_user.h	/^struct sgx_enclave_create  {$/;"	s
sgx_enclave_init	sgx_user.h	/^struct sgx_enclave_init {$/;"	s
sgx_epc_bank	sgx.h	/^struct sgx_epc_bank {$/;"	s
sgx_epc_banks	sgx_main.c	/^struct sgx_epc_bank sgx_epc_banks[SGX_MAX_EPC_BANKS];$/;"	v	typeref:struct:sgx_epc_bank
sgx_epc_page	sgx.h	/^struct sgx_epc_page {$/;"	s
sgx_err	sgx.h	195;"	d
sgx_etrack	sgx_util.c	/^void sgx_etrack(struct sgx_encl *encl)$/;"	f
sgx_evict_page	sgx_page_cache.c	/^static void sgx_evict_page(struct sgx_encl_page *entry,$/;"	f	file:
sgx_ewb	sgx_page_cache.c	/^static bool sgx_ewb(struct sgx_encl *encl,$/;"	f	file:
sgx_fault_flags	sgx.h	/^enum sgx_fault_flags {$/;"	g
sgx_fault_page	sgx_util.c	/^struct sgx_encl_page *sgx_fault_page(struct vm_area_struct *vma,$/;"	f
sgx_find_tgid_ctx	sgx_encl.c	/^static struct sgx_tgid_ctx *sgx_find_tgid_ctx(struct pid *tgid)$/;"	f	file:
sgx_flush_cpus	sgx_util.c	/^void sgx_flush_cpus(struct sgx_encl *encl)$/;"	f
sgx_fops	sgx_main.c	/^static const struct file_operations sgx_fops = {$/;"	v	typeref:struct:file_operations	file:
sgx_free_page	sgx_page_cache.c	/^void sgx_free_page(struct sgx_epc_page *entry, struct sgx_encl *encl)$/;"	f
sgx_free_va_slot	sgx.h	/^static inline void sgx_free_va_slot(struct sgx_va_page *page,$/;"	f
sgx_get_backing	sgx_util.c	/^struct page *sgx_get_backing(struct sgx_encl *encl,$/;"	f
sgx_get_encl	sgx_ioctl.c	/^static int sgx_get_encl(unsigned long addr, struct sgx_encl **encl)$/;"	f	file:
sgx_get_page	sgx_page_cache.c	/^void *sgx_get_page(struct sgx_epc_page *entry)$/;"	f
sgx_get_unmapped_area	sgx_main.c	/^static unsigned long sgx_get_unmapped_area(struct file *file,$/;"	f	file:
sgx_info	sgx.h	191;"	d
sgx_init_flag	sgx_main.c	/^static atomic_t sgx_init_flag = ATOMIC_INIT(0);$/;"	v	file:
sgx_init_page	sgx_encl.c	/^static int sgx_init_page(struct sgx_encl *encl, struct sgx_encl_page *entry,$/;"	f	file:
sgx_invalidate	sgx_util.c	/^void sgx_invalidate(struct sgx_encl *encl, bool flush_cpus)$/;"	f
sgx_ioc_enclave_add_page	sgx_ioctl.c	/^static long sgx_ioc_enclave_add_page(struct file *filep, unsigned int cmd,$/;"	f	file:
sgx_ioc_enclave_create	sgx_ioctl.c	/^static long sgx_ioc_enclave_create(struct file *filep, unsigned int cmd,$/;"	f	file:
sgx_ioc_enclave_init	sgx_ioctl.c	/^static long sgx_ioc_enclave_init(struct file *filep, unsigned int cmd,$/;"	f	file:
sgx_ioc_t	sgx_ioctl.c	/^typedef long (*sgx_ioc_t)(struct file *filep, unsigned int cmd,$/;"	t	file:
sgx_ioctl	sgx_ioctl.c	/^long sgx_ioctl(struct file *filep, unsigned int cmd, unsigned long arg)$/;"	f
sgx_ipi_cb	sgx_util.c	/^static void sgx_ipi_cb(void *info)$/;"	f	file:
sgx_isolate_encl	sgx_page_cache.c	/^static struct sgx_encl *sgx_isolate_encl(struct sgx_tgid_ctx *ctx,$/;"	f	file:
sgx_isolate_pages	sgx_page_cache.c	/^static void sgx_isolate_pages(struct sgx_encl *encl,$/;"	f	file:
sgx_isolate_tgid_ctx	sgx_page_cache.c	/^static struct sgx_tgid_ctx *sgx_isolate_tgid_ctx(unsigned long nr_to_scan)$/;"	f	file:
sgx_keyrequest	sgx_arch.h	/^struct sgx_keyrequest {$/;"	s
sgx_measure	sgx_encl.c	/^static int sgx_measure(struct sgx_epc_page *secs_page,$/;"	f	file:
sgx_misc	sgx_arch.h	/^enum sgx_misc {$/;"	g
sgx_misc_reserved	sgx_main.c	/^u32 sgx_misc_reserved;$/;"	v
sgx_mmap	sgx_main.c	/^static int sgx_mmap(struct file *file, struct vm_area_struct *vma)$/;"	f	file:
sgx_mmu_notifier_ops	sgx_encl.c	/^static const struct mmu_notifier_ops sgx_mmu_notifier_ops = {$/;"	v	typeref:struct:mmu_notifier_ops	file:
sgx_mmu_notifier_release	sgx_encl.c	/^static void sgx_mmu_notifier_release(struct mmu_notifier *mn,$/;"	f	file:
sgx_nr_epc_banks	sgx_main.c	/^int sgx_nr_epc_banks;$/;"	v
sgx_nr_free_pages	sgx_page_cache.c	/^static unsigned int sgx_nr_free_pages;$/;"	v	file:
sgx_nr_high_pages	sgx_page_cache.c	/^static unsigned int sgx_nr_high_pages;$/;"	v	file:
sgx_nr_low_pages	sgx_page_cache.c	/^static unsigned int sgx_nr_low_pages = SGX_NR_LOW_EPC_PAGES_DEFAULT;$/;"	v	file:
sgx_nr_total_epc_pages	sgx_page_cache.c	/^static unsigned int sgx_nr_total_epc_pages;$/;"	v	file:
sgx_page_cache_init	sgx_page_cache.c	/^int sgx_page_cache_init(void)$/;"	f
sgx_page_cache_teardown	sgx_page_cache.c	/^void sgx_page_cache_teardown(void)$/;"	f
sgx_page_type	sgx_arch.h	/^enum sgx_page_type {$/;"	g
sgx_pageinfo	sgx_arch.h	/^struct sgx_pageinfo {$/;"	s
sgx_pcmd	sgx_arch.h	/^struct sgx_pcmd {$/;"	s
sgx_pm_suspend	sgx_main.c	/^static int sgx_pm_suspend(struct device *dev)$/;"	f	file:
sgx_pr_ratelimited	sgx.h	184;"	d
sgx_process_add_page_req	sgx_encl.c	/^static bool sgx_process_add_page_req(struct sgx_add_page_req *req,$/;"	f	file:
sgx_put_backing	sgx_util.c	/^void sgx_put_backing(struct page *backing_page, bool write)$/;"	f
sgx_put_page	sgx_page_cache.c	/^void sgx_put_page(void *epc_page_vaddr)$/;"	f
sgx_report	sgx_arch.h	/^struct sgx_report {$/;"	s
sgx_secinfo	sgx_arch.h	/^struct sgx_secinfo {$/;"	s
sgx_secinfo_flags	sgx_arch.h	/^enum sgx_secinfo_flags {$/;"	g
sgx_secs	sgx_arch.h	/^struct sgx_secs {$/;"	s
sgx_sigstruct	sgx_arch.h	/^struct sgx_sigstruct {$/;"	s
sgx_sigstruct_body	sgx_arch.h	/^struct sgx_sigstruct_body {$/;"	s
sgx_sigstruct_header	sgx_arch.h	/^struct sgx_sigstruct_header {$/;"	s
sgx_sigstruct_payload	sgx_arch.h	/^struct sgx_sigstruct_payload {$/;"	s
sgx_swap_pages	sgx_page_cache.c	/^static void sgx_swap_pages(unsigned long nr_to_scan)$/;"	f	file:
sgx_targetinfo	sgx_arch.h	/^struct sgx_targetinfo {$/;"	s
sgx_tcs	sgx_arch.h	/^struct sgx_tcs {$/;"	s
sgx_tcs_flags	sgx_arch.h	/^enum sgx_tcs_flags {$/;"	g
sgx_test_and_clear_young	sgx_page_cache.c	/^int sgx_test_and_clear_young(struct sgx_encl_page *page, struct sgx_encl *encl)$/;"	f
sgx_test_and_clear_young_cb	sgx_page_cache.c	/^static int sgx_test_and_clear_young_cb(pte_t *ptep, pgtable_t token,$/;"	f	file:
sgx_tgid_ctx	sgx.h	/^struct sgx_tgid_ctx {$/;"	s
sgx_tgid_ctx_list	sgx_page_cache.c	/^LIST_HEAD(sgx_tgid_ctx_list);$/;"	v
sgx_tgid_ctx_mutex	sgx_page_cache.c	/^DEFINE_MUTEX(sgx_tgid_ctx_mutex);$/;"	v
sgx_tgid_ctx_release	sgx_encl.c	/^void sgx_tgid_ctx_release(struct kref *ref)$/;"	f
sgx_va_page	sgx.h	/^struct sgx_va_page {$/;"	s
sgx_va_pages_cnt	sgx_page_cache.c	/^atomic_t sgx_va_pages_cnt = ATOMIC_INIT(0);$/;"	v
sgx_validate_offset	sgx_encl.c	/^static bool sgx_validate_offset(struct sgx_encl *encl, unsigned long offset)$/;"	f	file:
sgx_validate_secinfo	sgx_encl.c	/^static int sgx_validate_secinfo(struct sgx_secinfo *secinfo)$/;"	f	file:
sgx_validate_secs	sgx_encl.c	/^static int sgx_validate_secs(const struct sgx_secs *secs,$/;"	f	file:
sgx_validate_tcs	sgx_encl.c	/^static int sgx_validate_tcs(struct sgx_encl *encl, struct sgx_tcs *tcs)$/;"	f	file:
sgx_vm_ops	sgx_vma.c	/^const struct vm_operations_struct sgx_vm_ops = {$/;"	v	typeref:struct:vm_operations_struct
sgx_vma_access	sgx_vma.c	/^static int sgx_vma_access(struct vm_area_struct *vma, unsigned long addr,$/;"	f	file:
sgx_vma_access_word	sgx_vma.c	/^static inline int sgx_vma_access_word(struct sgx_encl *encl,$/;"	f	file:
sgx_vma_close	sgx_vma.c	/^static void sgx_vma_close(struct vm_area_struct *vma)$/;"	f	file:
sgx_vma_fault	sgx_vma.c	/^static int sgx_vma_fault(struct vm_fault *vmf)$/;"	f	file:
sgx_vma_open	sgx_vma.c	/^static void sgx_vma_open(struct vm_area_struct *vma)$/;"	f	file:
sgx_warn	sgx.h	193;"	d
sgx_write_pages	sgx_page_cache.c	/^static void sgx_write_pages(struct sgx_encl *encl, struct list_head *src)$/;"	f	file:
sgx_xfrm_mask	sgx_main.c	/^u64 sgx_xfrm_mask = 0x3;$/;"	v
sgx_xsave_size_tbl	sgx_main.c	/^u32 sgx_xsave_size_tbl[64];$/;"	v
sgx_zap_tcs_ptes	sgx_util.c	/^void sgx_zap_tcs_ptes(struct sgx_encl *encl, struct vm_area_struct *vma)$/;"	f
signature	sgx_arch.h	/^	uint8_t signature[SGX_MODULUS_SIZE];$/;"	m	struct:sgx_sigstruct
sigstruct	sgx_user.h	/^	__u64	sigstruct;$/;"	m	struct:sgx_enclave_init
size	sgx.h	/^	unsigned long size;$/;"	m	struct:sgx_encl
size	sgx.h	/^	unsigned long size;$/;"	m	struct:sgx_epc_bank
size	sgx_arch.h	/^	uint64_t size;$/;"	m	struct:sgx_secs
src	sgx_user.h	/^	__u64	src;$/;"	m	struct:sgx_enclave_add_page
src	sgx_user.h	/^	__u64	src;$/;"	m	struct:sgx_enclave_create
srcpge	sgx_arch.h	/^	uint64_t srcpge;$/;"	m	struct:sgx_pageinfo
ssaframesize	sgx.h	/^	unsigned long ssaframesize;$/;"	m	struct:sgx_encl
ssaframesize	sgx_arch.h	/^	uint32_t ssaframesize;$/;"	m	struct:sgx_secs
state	sgx_arch.h	/^	uint64_t state;$/;"	m	struct:sgx_tcs
swdefined	sgx_arch.h	/^	uint32_t swdefined;$/;"	m	struct:sgx_sigstruct_header
tgid	sgx.h	/^	struct pid *tgid;$/;"	m	struct:sgx_tgid_ctx	typeref:struct:sgx_tgid_ctx::pid
tgid_ctx	sgx.h	/^	struct sgx_tgid_ctx *tgid_ctx;$/;"	m	struct:sgx_encl	typeref:struct:sgx_encl::sgx_tgid_ctx
va	sgx.h	/^	unsigned long va;$/;"	m	struct:sgx_epc_bank
va_offset	sgx.h	/^	unsigned int va_offset;$/;"	m	struct:sgx_encl_page
va_page	sgx.h	/^	struct sgx_va_page *va_page;$/;"	m	struct:sgx_encl_page	typeref:struct:sgx_encl_page::sgx_va_page
va_pages	sgx.h	/^	struct list_head va_pages;$/;"	m	struct:sgx_encl	typeref:struct:sgx_encl::list_head
valid	sgx_arch.h	/^	uint32_t valid;$/;"	m	struct:sgx_einittoken_payload
vendor	sgx_arch.h	/^	uint32_t vendor;$/;"	m	struct:sgx_sigstruct_header
xfrm	sgx.h	/^	uint64_t xfrm;$/;"	m	struct:sgx_encl
xfrm	sgx_arch.h	/^	uint64_t xfrm;$/;"	m	struct:sgx_einittoken_payload
xfrm	sgx_arch.h	/^	uint64_t xfrm;$/;"	m	struct:sgx_report
xfrm	sgx_arch.h	/^	uint64_t xfrm;$/;"	m	struct:sgx_secs
xfrm	sgx_arch.h	/^	uint64_t xfrm;$/;"	m	struct:sgx_sigstruct_body
xfrm	sgx_arch.h	/^	uint64_t xfrm;$/;"	m	struct:sgx_targetinfo
xfrmmask	sgx_arch.h	/^	uint64_t xfrmmask;$/;"	m	struct:sgx_keyrequest
